JSON
 4. Создать внешний репозиторий c названием JSON.: на сайте GitHub создаем репозиторий с названием JSON
 5. Клонировать репозиторий JSON на локальный компьютер.: git clone https://github.com/Sashabludov/JSON.git
 6. Внутри локального JSON создать файл “new.json”.: cd JSON ; cat >new.json  CTRL+C
 7. Добавить файл под гит.: git add new.json
 8. Закоммитить файл. git commit -m "1 version json"
 9. Отправить файл на внешний GitHub репозиторий.: git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.:
cat >>new.json
Polienko Alexandr Alexandrovich
28
0
1000

 11. Отправить изменения на внешний репозиторий.: git commit -a -m "2 version json" ; git push
 12. Создать файл preferences.json: cat >preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.: 
Zelenaya Milya
House MD
Burger
Springtime
China

CTRL+C
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON: 
cat >skils.json 
1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
2. Что такое клиент-серверная архитектура.
3. HTTP Методы запросов на сервер.
4. Коды ответов HTTP сервера.
5. Структуры HTTP запросов и ответов.
6. Что такое JSON, XML. Их структура.
7. Тестирование API через Postman (JS, автотесты API).
8. Снятие и чтение логов c внешнего сервера.
9. Снифинг http web трафика через Charles и Fiddler.
10. Dev Tools веб браузеров (Google Chrome, FireFox).
11. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)
12. Мобильное тестирование.
13. Особенность iOS, Android, гайдлайны.
14. Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)
15. Сборка Android приложений на Android Studio.
16. ADB (управление андройд девайсами).
17. Настройка прокси и vpn на iOS и Android.
18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.
19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)
20. Основы bash скриптинг, автоматизация рутинных задач на сервере.
21. Доступ к удалённым серверам.
22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).
23. База данных Postgres (установка, настройка и использование).
24. Нереляционная база данных Redis (установка, настройка и использование).
25. Нагрузочное тестирование в Jmeter.
26. Методология разработки Scrum.
27. Техники тест-дизайна (Классы эквивалентности, граничные значения, комбинаторные техники (Попарный, ортогональный, базовый выбор, каждый выбор), состояния и переходы)
28. Python.
 
CTRL+C
 15. Отправить сразу 2 файла на внешний репозиторий.: git commit -m "2 news fille" ; git push
 16. На веб интерфейсе создать файл bug_report.json.: нажимаем Add file> Create new fille
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.:Создаем имя bug_report.json нажимаем Commit changes
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.: 
Нажимаем на файл "Bug_report.json" > Edit this file >
{
"id":1
},
"Tittle":"Sign up with Google option is not available"
"Steps":[
"1) Open the app in the browser"
"2) Click on Sign up"
],
"Expect Resuls":"The available options are: -sign up Email. -Sign up with Facebook. -Sign up with Google"
"Actual Resuls":"The available options are: -sign up Email. -Sign up with Facebook"
"Reportet":"Alexandr Polienko"
"Severity":"High"
"Priority":"High"
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON: git pull
